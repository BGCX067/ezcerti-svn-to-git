<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.4.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	

	<bean id="authenticationSuccessHandler" class="com.icerti.ezcerti.util.AuthenticationSuccessHandler">
	</bean>

<!-- 스프링 시큐리티 기본 설정. 로그인 페이지의 url 및 로그아웃 페이지의 url, 쿠기 설정 -->
	<security:http auto-config="true" use-expressions="true">
		<security:form-login login-processing-url="/static/j_spring_security_check"
			login-page="/login"
			authentication-failure-url="/login?login_error=t"
			default-target-url="/login" 
			authentication-success-handler-ref="authenticationSuccessHandler"
			/>
		<security:logout logout-url="/static/j_spring_security_logout" />
		<security:remember-me key="myKey" user-service-ref="userService" token-validity-seconds="241920" />
		
		<security:intercept-url pattern="/resources**" access="permitAll"/>
		<security:intercept-url pattern="/muniv/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
		<security:intercept-url pattern="/prof/**" access="hasAnyRole('ROLE_PROF')"/>
		<security:intercept-url pattern="/student/**" access="hasAnyRole('ROLE_STUDENT')"/>
	</security:http>
	
	<!-- 데이터베이스 인증 방식 -->
	
	<!-- 인증 관리자 설정 -->	
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource" id="userService"
			users-by-username-query="select admin_no as username, admin_passwd as password, 1 as enabled from tb_admin where admin_no=?"
			authorities-by-username-query="select admin_no as username, authority from tb_admin where admin_no=?" />
			<security:password-encoder hash="sha-256"></security:password-encoder>
		</security:authentication-provider>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource" 
			users-by-username-query="select student_no as username, student_passwd as password, 1 as enabled from tb_student where student_no=?"
			authorities-by-username-query="select student_no as username, authority from tb_student where student_no=?" />
			<security:password-encoder hash="sha-256"></security:password-encoder>
		</security:authentication-provider>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource" 
			users-by-username-query="select prof_no as username, prof_passwd as password, 1 as enabled from tb_professor where prof_no=?"
			authorities-by-username-query="select prof_no as username, authority from tb_professor where prof_no=?" />
			<security:password-encoder hash="sha-256"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
